<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.project.oneshot.inventory.purchase.PurchaseMapper">

    <!-- 구매 신청 등록 -->
    <insert id="registerPurchase" parameterType="java.util.List" useGeneratedKeys="true" keyProperty="purchaseNo">
        INSERT INTO purchase (purchase_no, product_no, purchase_price, purchase_quantity, purchase_date, purchase_status, employee_no)
        VALUES
        <foreach collection="list" item="list" separator=",">
            (#{list.purchaseNo}, #{list.productNo}, #{list.purchasePrice}, #{list.purchaseQuantity}, NOW(), '승인대기', #{list.employeeNo})
        </foreach>
    </insert>


    <!-- 구매 신청할 때 값 불러오기 -->
    <select id="getAllSuppliers" resultType="SupplierVO">
        SELECT * FROM supplier
    </select>

    <select id="getAllCategories" resultType="CategoryVO">
        SELECT * FROM category
    </select>

    <select id="getProductsByCategory" resultType="ProductVO">
        SELECT * FROM product WHERE category_no = #{categoryNo}
    </select>

    <select id="getAllEmployees" resultType="EmployeeVO">
        SELECT * FROM employee
    </select>


    <!-- 목록 조회 -->
    <select id="getAllPurchase" resultType="PurchaseVO">
        select pc.purchase_no,
               case when count(p.product_name) > 1
               then concat(min(p.product_name), ' 외 ', count(p.product_name) - 1, '건')
               else min(p.product_name) end as product_name,
               case when count(s.supplier_name) > 1
               then concat(min(s.supplier_name), ' 외 ', count(s.supplier_name) - 1, '개사')
               else min(s.supplier_name) end as supplier_name,
               sum(pc.purchase_quantity) as total_purchase_price,
               e.employee_name,
               pc.purchase_status,
               pc.purchase_date
        from purchase pc left join employee e on pc.employee_no = e.employee_no
                         left join product p on pc.product_no = p.product_no
                         left join category c on p.category_no = c.category_no
                         left join supplier s on p.supplier_no = s.supplier_no
        group by pc.purchase_no,
                 e.employee_name,
                 pc.purchase_status,
                 pc.purchase_date
        <where>
            <if test="productNo != null and productNo != ''">
                AND p.product_no LIKE CONCAT('%', #{productNo}, '%')
            </if>
            <if test="purchasePrice != null and purchasePrice != ''">
                AND pc.purchasePrice LIKE CONCAT('%', #{purchasePrice}, '%')
            </if>
            <if test="supplierNo != null and supplierNo != ''">
                AND s.supplier_no = #{supplierNo}
            </if>
            <if test="employeeNo != null and employeeNo != ''">
                AND e.employee_no LIKE CONCAT('%', #{employeeNo}, '%')
            </if>
            <if test="purchaseStatus != null and purchaseStatus != ''">
                AND pc.purchase_status = #{purchaseStatus}
            </if>
            <if test="purchaseDate != null and purchaseDate != ''">
                AND pc.purchase_date = #{purchaseDate}
            </if>
        </where>
        ORDER BY pc.purchase_no desc
        limit #{amount} offset #{pageStart}
    </select>

    <!-- 전체 게시글 페이지네이션 -->
    <select id="getTotalPurchase" resultType="int">
        SELECT count(*)
        FROM purchase
        where 1 = 1
        <if test="productNo != null and productNo != ''">
            <![CDATA[ AND product_no LIKE CONCAT('%', #{product_no}, '%') ]]>
        </if>
        <if test="purchasePrice != null and purchasePrice != ''">
            <![CDATA[ AND purchase_price LIKE CONCAT('%', #{purchase_price}, '%') ]]>
        </if>
        <if test="supplierNo != null and supplierNo != ''">
            <![CDATA[ and product.supplier_no = #{supplierNo} ]]>
        </if>
        <if test="employeeNo != null and employeeNo != ''">
            <![CDATA[ AND employee_no LIKE CONCAT('%', #{employeeNo}, '%') ]]>
        </if>
        <if test="purchaseStatus != null and purchaseStatus != ''">
            <![CDATA[ AND purchase_status LIKE CONCAT('%', #{purchase_status}, '%') ]]>
        </if>
        <if test="purchaseDate != null and purchaseDate != ''">
            <![CDATA[ AND purchase_date LIKE CONCAT('%', #{purchase_date}, '%') ]]>
        </if>
    </select>

    <select id="getPurchaseNo" resultType="Integer">
        select purchase_no from purchase order by purchase_no desc limit 1
    </select>
</mapper>