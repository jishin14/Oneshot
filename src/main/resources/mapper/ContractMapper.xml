<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.project.oneshot.sales.contract.ContractMapper">

    <!-- 계약 조회 기능 -->
    <select id="getList" resultType="ContractVO">
        SELECT  CONTRACT_PRICE.CONTRACT_PRICE_NO,
                CLIENT.CLIENT_NAME,
                CONTRACT_PRICE.CONTRACT_SDATE,
                CONTRACT_PRICE.CONTRACT_EDATE,
                CASE
                WHEN COUNT(PRODUCT.PRODUCT_NAME) > 1 THEN
                CONCAT(
                MIN(PRODUCT.PRODUCT_NAME),
                ' 외 ',
                COUNT(PRODUCT.PRODUCT_NAME) -1,
                '건'
                )
                ELSE
                MIN(PRODUCT.PRODUCT_NAME)
                END AS PRODUCT_NAME,
                CLIENT.MANAGER_NAME,
                EMPLOYEE.EMPLOYEE_NAME,
                CONTRACT_PRICE.CONTRACT_PRICE_STATUS
        FROM CONTRACT_PRICE
                 LEFT JOIN PRODUCT ON CONTRACT_PRICE.PRODUCT_NO = PRODUCT.PRODUCT_NO
                 LEFT JOIN EMPLOYEE ON CONTRACT_PRICE.EMPLOYEE_NO = EMPLOYEE.EMPLOYEE_NO
                 LEFT JOIN CLIENT ON CONTRACT_PRICE.CLIENT_NO = CLIENT.CLIENT_NO
        WHERE 1 = 1
        <if test="managerName != null and managerName != ''">
            AND CLIENT.MANAGER_NAME = #{managerName}
        </if>
        <if test="productName != null and productName != ''">
            AND PRODUCT.PRODUCT_NAME = #{productName}
        </if>
        <if test="clientName != null and clientName != ''">
            AND CLIENT.CLIENT_NAME like concat('%', #{clientName}, '%')
        </if>
        <if test="contractSdate != null and contractSdate != ''">
            AND CONTRACT_PRICE.CONTRACT_SDATE = #{contractSdate}
        </if>
        <if test="contractEdate != null and contractEdate != ''">
            AND CONTRACT_PRICE.CONTRACT_EDATE = #{contractEdate}
        </if>
        <if test="contractPriceStatus != null">
            AND CONTRACT_PRICE.CONTRACT_PRICE_STATUS = #{contractPriceStatus}
        </if>
        GROUP BY
        CONTRACT_PRICE.CONTRACT_PRICE_NO,
        CLIENT.CLIENT_NAME,
        EMPLOYEE.EMPLOYEE_NAME,
        CONTRACT_PRICE.CONTRACT_SDATE,
        CONTRACT_PRICE.CONTRACT_EDATE,
        CLIENT.MANAGER_NAME,
        CONTRACT_PRICE.CONTRACT_PRICE_STATUS
        ORDER BY CONTRACT_PRICE.CONTRACT_PRICE_NO ASC
    </select>

    <!-- 계약 등록 기능 -->
    <insert id="getRegist" parameterType="java.util.List">
        INSERT INTO CONTRACT_PRICE (
            CONTRACT_PRICE_NO,
            PRODUCT_NO,
            EMPLOYEE_NO,
            CLIENT_NO,
            CONTRACT_SDATE,
            CONTRACT_EDATE,
            CONTRACT_PRICE,
            CONTRACT_PRICE_STATUS
        )
        VALUES

            <foreach collection="list" item="list" separator=",">
                (#{list.contractPriceNo},
                #{list.productNo},
                #{list.employeeNo},
                #{list.clientNo},
                #{list.contractSdate},
                #{list.contractEdate},
                #{list.contractPrice},
                '-')
            </foreach>
    </insert>

    <select id="getClientList" resultType="ClientVO">
        select * from client
    </select>

    <select id="getContractUpdateList" resultType="ClientVO">
        select * from client where client_no = #{clientNo}
    </select>

    <select id="getContractProductList" resultType="ProductVO">
        SELECT * FROM PRODUCT
    </select>

    <select id="getContractPriceNo" resultType="Integer">
        select contract_price_no from contract_price order by contract_price_no desc limit 1
    </select>

    <select id="getContractDetails" resultType="ContractVO">
        select client.client_name,
               client.manager_name,
               client.manager_phone,
               employee.employee_name,
               employee.employee_phone,
               contract_price.contract_sdate,
               contract_price.contract_edate,
               contract_price.contract_price,
               product.product_name,
               product.product_no

        from contract_price
                 left join client on contract_price.client_no = client.client_no
                 left join employee on contract_price.employee_no = employee.employee_no
                 left join product on contract_price.product_no = product.product_no

        where contract_price.contract_price_no = #{contractPriceNo}
    </select>

    <update id="getContractModify" parameterType="ContractVO">
        update contract_price
        set
            contract_price_status = #{contractPriceStatus},
            contract_sdate = #{contractSdate},
            contract_edate = #{contractEdate},
            contract_price = #{contractPrice}
        where
            contract_price_no = #{contractPriceNo} and
            product_no = #{productNo}
    </update>

    <select id="getTotalCount" resultType="int">
        SELECT COUNT(*)
        FROM (
        SELECT
        CONTRACT_PRICE.CONTRACT_PRICE_NO
        FROM CONTRACT_PRICE
        LEFT JOIN PRODUCT ON CONTRACT_PRICE.PRODUCT_NO = PRODUCT.PRODUCT_NO
        LEFT JOIN EMPLOYEE ON CONTRACT_PRICE.EMPLOYEE_NO = EMPLOYEE.EMPLOYEE_NO
        LEFT JOIN CLIENT ON CONTRACT_PRICE.CLIENT_NO = CLIENT.CLIENT_NO
        WHERE 1 = 1
        <if test="managerName != null and managerName != ''">
            AND CLIENT.MANAGER_NAME = #{managerName}
        </if>
        <if test="productName != null and productName != ''">
            AND PRODUCT.PRODUCT_NAME = #{productName}
        </if>
        <if test="clientName != null and clientName != ''">
            AND CLIENT.CLIENT_NAME like concat('%', #{clientName}, '%')
        </if>
        <if test="contractSdate != null and contractSdate != ''">
            AND CONTRACT_PRICE.CONTRACT_SDATE = #{contractSdate}
        </if>
        <if test="contractEdate != null and contractEdate != ''">
            AND CONTRACT_PRICE.CONTRACT_EDATE = #{contractEdate}
        </if>
        <if test="contractPriceStatus != null and contractPriceStatus != ''">
            AND CONTRACT_PRICE.CONTRACT_PRICE_STATUS = #{contractPriceStatus}
        </if>
        GROUP BY
        CONTRACT_PRICE.CONTRACT_PRICE_NO
        ) AS SUBQUERY
    </select>
</mapper>