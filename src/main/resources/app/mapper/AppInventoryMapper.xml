<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.project.oneshot.app.inventory.AppInventoryMapper">

    <!-- 구매 신청 등록 -->
    <insert id="registerPurchase" parameterType="java.util.List" useGeneratedKeys="true" keyProperty="purchaseNo">
        INSERT INTO purchase (purchase_no, product_no, purchase_price, purchase_quantity, purchase_date, employee_no)
        VALUES
        <foreach collection="list" item="list" separator=",">
            (nextval('purchase_seq'), #{list.productNo}, #{list.purchasePrice}, #{list.purchaseQuantity}, NOW(), #{list.employeeNo})
        </foreach>
    </insert>



    <!-- 구매 신청할 때 값 불러오기 -->
    <select id="getAllSuppliers" resultType="SupplierVO">
        SELECT * FROM supplier order by supplier_name
    </select>

    <select id="getSupplierInfo" resultType="SupplierVO">
        select * from supplier where supplier_no = #{supplierNo}
    </select>

    <select id="getCategories" resultType="CategoryVO">
        select product.category_no, category_name
        from supplier inner join product on supplier.supplier_no = product.supplier_no inner join category on product.category_no = category.category_no
        where supplier.supplier_no = #{supplierNo}
        group by product.category_no, category_name
        order by category_name
    </select>

    <select id="getProducts" resultType="ProductVO">
        select product_no, product_name from product where supplier_no = #{supplierNo} and category_no = #{categoryNo}
    </select>

    <select id="getQuantity" resultType="ProductVO">
        select product.product_no, COALESCE(SUM(purchase.purchase_quantity), 0) - COALESCE(SUM(order_item.product_quantity), 0) AS inventory_quantity, safety_quantity
        from product
        left join purchase on product.product_no = purchase.product_no
        left join order_item on product.product_no = order_item.product_no
        where product.product_no = #{productNo}
        group by product.product_no;
    </select>

    <select id="getProductsByCategory" resultType="ProductVO">
        SELECT * FROM product WHERE category_no = #{categoryNo}
    </select>

    <select id="getAllEmployees" resultType="EmployeeVO">
        SELECT * FROM employee
    </select>


    <!-- 목록 조회 -->
    <select id="getAllPurchase" resultType="PurchaseVO">
        select pc.purchase_no,
        supplier_name,
        category_name,
        product_name,
        purchase_quantity,
        purchase_price,
        e.employee_name,
        pc.purchase_status,
        pc.purchase_date
        from purchase pc left join employee e on pc.employee_no = e.employee_no
        left join product p on pc.product_no = p.product_no
        left join category c on p.category_no = c.category_no
        left join supplier s on p.supplier_no = s.supplier_no
        where 1 = 1
        <if test="searchKeyword != null and searchKeyword != ''">
            AND (
            supplier_name LIKE CONCAT('%', #{searchKeyword}, '%')
            OR category_name LIKE CONCAT('%', #{searchKeyword}, '%')
            OR product_name LIKE CONCAT('%', #{searchKeyword}, '%')
            )
        </if>
        ORDER BY pc.purchase_no desc
        <!--        limit #{amount} offset #{pageStart}-->
    </select>


    <select id="getAllCategories" resultType="CategoryVO">
        select * from category
    </select>

</mapper>